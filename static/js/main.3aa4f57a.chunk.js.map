{"version":3,"sources":["components/Project/Project.module.css","components/Abtme/Abtme.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/mainpage/mainpage.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","hoc/Auxi.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Abtme/Abtme.js","containers/AboutMe/AboutMe.js","components/mainpage/mainpage.js","components/Project/Project.js","containers/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","navigationItem","className","classes","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","backdrop","show","Backdrop","onClick","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","Abtme","header","resume","href","Button","variant","contactInfo","AboutMe","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","Mainpage","LinkedinClicked","console","log","GitClicked","mainpage","links","Project","header2","alink","PythonProjects","Projects","App","path","component","Boolean","window","location","hostname","match","app","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3aa4f57a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Project_header__3SLKk\",\"PythonProjects\":\"Project_PythonProjects__3EHB6\",\"header2\":\"Project_header2__2XGw4\",\"alink\":\"Project_alink__1lLS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Abtme\":\"Abtme_Abtme__218Yf\",\"header\":\"Abtme_header__2nD8r\",\"resume\":\"Abtme_resume__2eudj\",\"contactInfo\":\"Abtme_contactInfo__33XFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1hgsZ\",\"Open\":\"SideDrawer_Open__2begA\",\"Close\":\"SideDrawer_Close__3uT_I\",\"Logo\":\"SideDrawer_Logo__2BHp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainpage\":\"mainpage_mainpage__2txJB\",\"links\":\"mainpage_links__2xW3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1U9IR\",\"active\":\"NavigationItem_active__163C6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__vyoE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1HeG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__173VA\",\"Logo\":\"Toolbar_Logo__1Q_4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2cgm0\"};","\r\nconst aux = (props) => {\r\n    return (props.children)\r\n}\r\n\r\nexport default aux","import React from 'react'\r\nimport classes from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className = {classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName = {classes.active}> {props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;\r\n ","import React from 'react';\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className = {classes.NavigationItems}>\r\n        <NavigationItem link = '/' exact >Home</NavigationItem>\r\n        <NavigationItem link = '/aboutme' >About Me</NavigationItem>\r\n        <NavigationItem link = '/projects' >Projects</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\nconst backdrop = (props) => (\r\n    props.show ? <div className = {classes.Backdrop} onClick = {props.clicked}></div> :null\r\n);\r\n\r\nexport default backdrop","import React from 'react';\r\nimport classes from './SideDrawer.module.css'\r\nimport Aux from '../../../hoc/Auxi'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show = {props.open} clicked = {props.closed}/>\r\n            <div className = {attachedClasses.join(' ')}>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nconst drawerToggle = (props) => (\r\n    <div className = {classes.DrawerToggle} onClick = {props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => (\r\n    <header className = {classes.Toolbar}>\r\n        <DrawerToggle clicked = {props.drawerToggleClicked}/>\r\n    </header>\r\n);\r\n\r\nexport default toolbar","import React from 'react';\r\nimport classes from './Abtme.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Abtme = () => {\r\n    return (\r\n        <div>\r\n            <h1 className = {classes.header}>About Me</h1>\r\n            <div className = {classes.Abtme}>\r\n                My name is Ben and I am currently a student at UT Austin, class of 2022. \r\n                I double major in Astronomy and Physics and I'm interested in delving deeper into computer science.\r\n                In my free time I love trying my luck on \"gacha\" games and creating interesting projects. \r\n                (Resume button below doesn't work since I didn't want to pay to host a site)\r\n            </div>\r\n            <div className= {classes.resume}>\r\n                <a href =\"/aboutme\">\r\n                <Button variant=\"outline-light\">Resume</Button>\r\n                </a>\r\n            </div>\r\n            <div className = {classes.contactInfo}>\r\n                Phone: (609)-480-6967\r\n            </div>\r\n            <div className = {classes.contactInfo}>\r\n                Email: benyao111@utexas.edu\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Abtme","import React, {Component} from 'react';\r\nimport Abtme from '../../components/Abtme/Abtme'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport Aux from '../../hoc/Auxi'\r\nclass AboutMe extends Component {\r\n    state = {\r\n    showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n            showSideDrawer: !prevState.showSideDrawer};\r\n            });\r\n    }    \r\n    render() {\r\n        return(\r\n            <Aux>\r\n            <Toolbar drawerToggleClicked = {this.sideDrawerToggleHandler}/>\r\n            <SideDrawer\r\n            open = {this.state.showSideDrawer}\r\n            closed = {this.sideDrawerClosedHandler}/>\r\n            <Abtme/>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe","import React, {Component} from 'react';\r\nimport classes from './mainpage.module.css';\r\nimport Aux from '../../hoc/Auxi';\r\nimport NavigationItems from '../Navigation/NavigationItems/NavigationItems';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport AboutMe from '../../containers/AboutMe/AboutMe';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Mainpage extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n            showSideDrawer: !prevState.showSideDrawer};\r\n    });\r\n    }\r\n\r\n    LinkedinClicked = () => {\r\n        console.log(\"LinkedinClicked\")\r\n        //\r\n    };\r\n\r\n    GitClicked= () => {\r\n        console.log(\"GitClicked\")\r\n        //\r\n    };\r\n    render() {\r\n        return(\r\n            <Aux>\r\n            <Toolbar drawerToggleClicked = {this.sideDrawerToggleHandler}/>\r\n            <SideDrawer\r\n                open = {this.state.showSideDrawer}\r\n                closed = {this.sideDrawerClosedHandler}/>\r\n            <div className = {classes.mainpage}> Benjamin Yao </div>\r\n            <div  className = {classes.links}>\r\n                <a href = 'https://www.linkedin.com/in/byao/'>\r\n                    <Button variant=\"outline-light\" onClick = {this.LinkedinClicked}>LinkedIn</Button>\r\n                </a>\r\n            </div>\r\n            <div className = {classes.links}>\r\n                <a href = 'https://github.com/benyao111'>\r\n                    <Button variant=\"outline-light\" onClick = {this.GitClicked}>GitHub</Button>\r\n                </a>\r\n            </div>\r\n            </Aux>\r\n        )\r\n    }\r\n    //probably should have made a container for this but oh well\r\n    \r\n}\r\n\r\nexport default Mainpage","import React from 'react';\r\nimport classes from './Project.module.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Project = () => {\r\n    return (\r\n        <div>\r\n            <h1 className = {classes.header}>Projects</h1>\r\n            <div className = {classes.header2}>\r\n            Python Projects:\r\n            </div>\r\n                <a href = \"https://github.com/benyao111/pythonbot\" className={classes.alink}>\r\n                    <div className = {classes.PythonProjects}>\r\n                    Instagram Bot: Created an Instagram bot program using Python (Selenium) that can scroll through Instagram and \r\n                    like specific posts to help out influencers with low follower counts.\r\n                    </div>\r\n                </a>\r\n                <a href = \"/projects\" className={classes.alink}>\r\n                    <div className = {classes.PythonProjects}>\r\n                    Database Migration/Update Script: Script created during my internship at Comcast to migrate IP addresses \r\n                    and FQDNs to the TES Connector backend database. \r\n                    </div>\r\n                </a>\r\n            <div className = {classes.header2}>\r\n                JavaScript Projects:\r\n            </div>\r\n                <a href = \"https://react-burger-d3798.web.app/\" className={classes.alink}>\r\n                    <div className = {classes.PythonProjects}>\r\n                    Burger App: Created a burger building and ordering web app with React JS\r\n                    </div>\r\n                </a>\r\n                <a href = \"https://github.com/benyao111/Weather-Website\" className={classes.alink}>\r\n                    <div className = {classes.PythonProjects}>\r\n                    Weather Website: Pulls data from a public weather API to give accurate readings of the temperature, location, and forecast summary for a single day.\r\n                    </div>    \r\n                </a>\r\n                <a href = \"/\" className = {classes.alink}>\r\n                    <div className = {classes.PythonProjects}>\r\n                    This Website: Built with React JS.\r\n                    </div>\r\n                </a>\r\n        \r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\nexport default Project","import React, {Component} from 'react';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport Aux from '../../hoc/Auxi'\r\nimport Project from '../../components/Project/Project'\r\n\r\nclass Projects extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n            showSideDrawer: !prevState.showSideDrawer};\r\n    });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Aux>\r\n            <Toolbar drawerToggleClicked = {this.sideDrawerToggleHandler}/>\r\n            <SideDrawer\r\n                open = {this.state.showSideDrawer}\r\n                closed = {this.sideDrawerClosedHandler}/>\r\n            <Project/>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects","import React, {Component} from 'react';\r\nimport Mainpage from './components/mainpage/mainpage'\r\nimport './App.css';\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport AboutMe from '../src/containers/AboutMe/AboutMe'\r\nimport Projects from '../src/containers/Projects/Projects'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n        <Route path = '/' exact component = {Mainpage}/>\r\n        <Route path = '/aboutme' component = {AboutMe}/>\r\n        <Route path = '/projects' component = {Projects}/>\r\n        </Switch>\r\n      </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter, BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst app = (\r\n  <HashRouter basename = {process.env.PUBLIC_URL}>\r\n    <App/>\r\n  </HashRouter>\r\n  //used to be browser router had to swap for ghpages\r\n); \r\n\r\nReactDOM.render(app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}